_HiStOrY_V2_
a\040=\0405
q()
install.packages("sf")
install.packages("~/Downloads/sf_1.0-6.tar", repos = NULL)
install.packages("~/Downloads/sf_1.0-6.tar", repos = NULL, type = "binary")
source("~/Desktop/hw2022/602/yrz/vaccine_visualization.R")
View(vac.fullyvaced)
vac.gif <- plot_usmap(data = vac.fullyvaced, values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(size = 12, face = "bold")) +
transition_time(Date)
animate(vac.gif, frame = 5)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = month(Date)) |>
filter(Series_Complete_Pop_Pct = max(Series_Complete_Pop_Pct))
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month) |>
filter(Series_Complete_Pop_Pct = max(Series_Complete_Pop_Pct))
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct))
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct))
View(vac.fullyvac.bymonth)
View(vac)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
unique()
View(vac.fullyvac.bymonth)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
unique(month, abbr, Series_Complete_Pop_Pct, fips)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
select(-Date) |>
unique()
View(vac.fullyvac.bymonth)
vac.fullyvac.bymonth |> group_by(abbr, month) |> count()
vac.fullyvac.bymonth |> group_by(month) |> count()
max(vac$Date)
min(vac$Date)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = lubridate::month(Date)) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
select(-Date) |>
unique()
vac.gif <- plot_usmap(data = vac.fullyvac.bymonth,
values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(size = 12, face = "bold")) +
transition_time(month)
animate(vac.gif, frame = 12)
View(vac.gif)
View(vac.gif)
animate(vac.gif, frame = 12)
anim_save("vac.gif", animate(vac.gif))
View(vac.fullyvac.bymonth)
View(vac)
max(vac$Date)
library(lubridate)
year("2020-12-31")
?paste
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(Date = ymd(paste(year(Date), month(Date), 1, sep = "-"))) |>
group_by(Date, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
unique()
View(vac.fullyvac.bymonth)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(Date = ym(paste(year(Date), month(Date), sep = "-"))) |>
group_by(Date, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
unique()
View(vac.fullyvac.bymonth)
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = ym(paste(year(Date), month(Date), sep = "-"))) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
select(-Date)
unique()
vac.fullyvac.bymonth = vac.fullyvaced |>
mutate(month = ym(paste(year(Date), month(Date), sep = "-"))) |>
group_by(month, abbr) |>
filter(Series_Complete_Pop_Pct == max(Series_Complete_Pop_Pct)) |>
select(-Date) |>
unique()
View(vac.fullyvac.bymonth)
vac.gif <- plot_usmap(data = vac.fullyvac.bymonth,
values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(size = 12, face = "bold")) +
transition_time(month) +
labs(title = "Proportion of fully vaccination at {frame_time}") +
ease_aes("linear")
?animate
anim_save("vac.gif", animate(vac.gif, height = 6, width = 8, dpi = 300))
anim_save("vac.gif", animate(vac.gif, height = 6, width = 8, res = 300))
anim_save("vac.gif", animate(vac.gif, height = 6, width = 8, res = 300))
anim_save("vac.gif", animate(vac.gif, res = 300))
View(vac.fullyvac.bymonth)
View(vac.fullyvac.bymonth)
anim_save("vac.gif", animate(vac.gif, res = 300, height = 600, width = 800))
vac.gif <- plot_usmap(data = vac.fullyvac.bymonth,
values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(face = "bold")) +
transition_time(month) +
labs(title = "Proportion of fully vaccination at {frame_time}") +
ease_aes("linear")
anim_save("vac.gif", animate(vac.gif, res = 300, height = 600, width = 800))
vac.gif <- plot_usmap(data = vac.fullyvac.bymonth,
values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(face = "bold")) +
transition_time(month) +
labs(title = "Proportion of fully vaccination at {frame_time}") +
ease_aes("linear")
anim_save("vac.gif", animate(vac.gif))
View(vac.fullyvac.bymonth)
View(vac.fullyvaced)
vac.gif <- plot_usmap(data = vac.fullyvac.bymonth,
values = "Series_Complete_Pop_Pct", regions = "states") +
scale_fill_gradient2(
low = "#FFFAFA", mid = "#BBFFFF", high = "#483D8B", limits = c(0, 100),
midpoint = 30, name = "Proportion of fully vacced"
) +
theme(legend.position = "right", plot.title = element_text(face = "bold")) +
transition_time(month) +
labs(title = "Proportion of fully vaccinate people at {frame_time}") +
ease_aes("linear")
anim_save("vac.gif", animate(vac.gif, width = 800))
View(vac.fullyvaced)
View(vac.fullyvac.bymonth)
# %%
library(tidyverse)
library(usmap)
library(gganimate)
library(transformr)
library(lubridate)
data("statepov")
# %% loda the vaccine data
vac <- read_csv("https://data.cdc.gov/api/views/unsk-b7fc/rows.csv")
statepov <- as_tibble(statepov)
# %% Focus on Series_Complete_Pop_Pct, i.e Percent of people who are fully
# vaccinated (have second dose of a two-dose vaccine or one dose of a
# single-dose vaccine) based on the jurisdiction where recipient lives
vac.fullyvaced <- vac %>%
select(Date, Location, Series_Complete_Pop_Pct)
# %% remove abnormal observations
vac.fullyvaced <- vac.fullyvaced |>
filter(!Location %in% c("VA2", "IH2", "BP2")) |>
rename(abbr = Location) |>
inner_join(statepov) |>
mutate(Date = lubridate::mdy(Date))
# some of the data is not from the 51 staes of US they are actually US
# territoiries, so ignore them
vac.fullyvaced |>
filter(is.na(pct_pov_2014)) |>
group_by(abbr) |>
count()
View(vac.fullyvaced)
View(statepov)
remotes::install_github('thomasp85/gganimate')
?get_sum_adj
source("~/Desktop/hw2022/NonparBayes/code/adj.R")
setwd("/Users/northyear/Desktop/hw2022/NonparBayes/code")
source("~/Desktop/hw2022/NonparBayes/code/adj.R")
View(expand_adj)
View(get_sum_adj)
View(get_sum_adj)
View(get_sum_adj)
View(get_adj_at_a_row)
View(expand_adj)
